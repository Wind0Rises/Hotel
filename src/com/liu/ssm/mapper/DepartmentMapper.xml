<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
 	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
	
	
	<mapper namespace = "com.liu.ssm.mapper.DepartmentMapper">
		<cache eviction="LRU" type="com.liu.other.cache.RedisCache"  />
	
		<insert id="add" parameterType="department">
			INSERT INTO `hotel_mana_depa`(departmentNo,departmentName,SupervisorNo,departmentNumber,description,higherOfficeNo)
			VALUE(#{departmentNo},#{departmentName},#{SupervisorNo},#{departmentNumber},#{description},#{higherOfficeNo}) 
		</insert>
		
		<!-- useGeneratedKeys="true" keyProperty="departmentNo" -->
		<!-- <insert id="addBackPrimaryKey" parameterType="department" >
			<selectKey resultType="string" order="BEFORE" keyProperty="departmentNo" >
				select UUID()
			</selectKey>
			INSERT INTO `hotel_mana_depa`(departmentNo,departmentName,SupervisorNo,departmentNumber,description,higherOfficeNo)
			VALUE(#{departmentNo},#{departmentName},#{SupervisorNo},#{departmentNumber},#{description},#{higherOfficeNo}) 
		</insert> -->
		
		<insert id="insertList" parameterType="list"  >
			INSERT INTO `hotel_mana_depa`(departmentNo,departmentName,SupervisorNo,
			departmentNumber,description,higherOfficeNo)
			VALUES
			<foreach collection="list" item="item" index="index" separator="," >
				(#{item.departmentNo,jdbcType=VARCHAR},
				 #{item.departmentName,jdbcType=VARCHAR},
				 #{item.SupervisorNo,jdbcType=VARCHAR},
				 #{item.departmentNumber,jdbcType=INTEGER},
				 #{item.description,jdbcType=VARCHAR},
				 #{item.higherOfficeNo,jdbcType=VARCHAR})
			</foreach>
		</insert>
		
		<delete id="delete" parameterType="string">
			DELETE FROM `hotel_mana_depa` WHERE departmentNo=#{id}
		</delete>
		<delete id="deleteList" parameterType="string">
			DELETE FROM `hotel_mana_depa` WHERE departmentNo in
			<foreach collection="array" item="item"  open="(" close=")" index="index" separator="," >
				#{item}
			</foreach>
		</delete>
		
		
		
		<update id="update" parameterType="department" flushCache="true">
			UPDATE `hotel_mana_depa` SET departmentName=#{departmentName},SupervisorNo=#{SupervisorNo},departmentNumber = #{departmentNumber},
			description = #{description},higherOfficeNo = #{higherOfficeNo}
			WHERE departmentNo = #{departmentNo}
		</update>
		
		<select id="getById" parameterType="string" resultType="department" useCache="true" > 
			SELECT * FROM `hotel_mana_depa` WHERE departmentNo = #{id}			
		</select>
		
		<select id="totalNumber" parameterType="Map" resultType="int">
			SELECT COUNT(*) FROM `hotel_mana_depa` WHERE 1 = 1 
			<if test="departmentName != null">
				<if test="departmentName != ''" >
				 	and	departmentName LIKE '%${departmentName}%' 
				</if>
			</if>
		</select> 
		
		<select id="getPage" parameterType="map" resultType="department" >
			SELECT * FROM `hotel_mana_depa` WHERE 1 = 1 
			<if test="departmentName != null">
				<if test="departmentName != ''" >
				 	and	departmentName LIKE '%${departmentName}%' 
				</if>
			</if>
			limit ${startNo},${pageSize}
		</select>
		
		<select id="getDepartmentByName" parameterType="string" resultType="department" >
			SELECT * FROM `hotel_mana_depa` WHERE departmentName = #{departmentName}
		</select>
	</mapper>